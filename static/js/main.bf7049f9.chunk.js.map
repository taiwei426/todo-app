{"version":3,"sources":["apis/todos.js","actions/index.js","components/ToDoCheckmark.js","components/ToDoItem.js","components/ToDoForm.js","components/ToDoEdit.js","components/ToDoList.js","components/ToDoCreate.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","deleteToDo","id","dispatch","a","todos","delete","console","log","type","payload","getToDo","todoItem","deselectActiveToDo","ToDoCheckmark","onCheck","itemId","input","value","props","renderCheckMark","formProps","className","Field","name","this","component","item","React","Component","connect","reduxForm","form","enableReinitialize","ToDoItem","onEditClick","itemProps","onClick","e","stopPropagation","state","activeToDo","ToDoForm","renderInput","style","display","width","autoComplete","autoFocus","placeholder","meta","error","formOnChangeSubmit","formValues","formOnSubmit","onKeyPress","event","arrowsKeyPress","initialize","initialValues","onBlur","setTimeout","handleSubmit","onSubmit","onKeyDown","onChange","validate","Object","values","ToDoEdit","editToDo","getNextItem","forEach","el","nextItemIndex","indexOf","length","keyCode","handleKeyDown","bind","patch","response","data","ToDoList","getToDos","map","key","get","ToDoCreate","onFormSubmit","createToDo","then","reset","post","App","minHeight","class","href","target","combineReducers","action","_","mapKeys","omit","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bf7049f9.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    // baseURL : 'http://localhost:3001'\n    baseURL: 'https://vivianzhang-todo-app-api.herokuapp.com'\n})","import todos from '../apis/todos'\n\n\nexport const createToDo = (formValues) => async (dispatch) => {\n    const response = await todos.post('/todos', formValues);\n    dispatch({\n        type: 'TODO_CREATE', \n        payload: response.data\n    },\n    // reset('to-dos')\n    )\n}\n\n\nexport const getToDos = () => async (dispatch) => {\n    const response = await todos.get('/todos')\n    dispatch({\n        type: 'TODOS_GET', \n        payload: response.data\n    });   \n}\n\nexport const editToDo = (id, formValues) => async (dispatch) => {\n    const response = await todos.patch(`/todos/${id}`, formValues)\n    dispatch({\n        type: 'TODOS_EDIT', \n        payload: response.data\n    });   \n}\n\nexport const deleteToDo = (id) => async (dispatch) => {\n    await todos.delete(`/todos/${id}`);\n    console.log(`deleting id: ${id}`)\n    dispatch({\n        type: 'TODO_DELETE', \n        payload: id\n    })\n}\n\nexport const getToDo = (todoItem) => {\n    return {\n        type: 'TODO_GET', \n        payload: todoItem\n    }\n}\n\nexport const deselectActiveToDo = () => {\n    return{\n        type: 'DESELECT_ACTIVE_TODO', \n    }\n}\n\n\n/// put needs its own URL (so i needed the id) but json server creates its own id\n// export const createToDo = (formValues) => async (dispatch) => {\n//     const response = await todos.put(`/todos/${id}`, formValues);\n//     dispatch({\n//         type: 'TODO_CREATE', \n//         payload: response.data\n//     })\n// }\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteToDo} from '../actions'\nimport {Field, reduxForm} from 'redux-form'\n\nclass ToDoCheckmark extends React.Component{\n    onCheck = ({itemId, input}) => {\n        if(input.value){\n            this.props.deleteToDo(itemId);\n        }\n    }\n    renderCheckMark = (formProps) => {\n        this.onCheck(formProps);\n        return (\n            <input {...formProps.input} type =\"checkbox\" value=\"false\" className=\"checkmark\"></input> \n        )\n    }\n    render(){\n        return (\n            <div className=\"checkmark-container\">\n                <Field \n                    name = {this.props.name} \n                    component = {this.renderCheckMark} \n                    item = {this.props.item} \n                    itemId = {this.props.itemId}/>\n                <div className=\"styled-checkmark\"></div>\n            </div>\n        )\n    }\n}\n\nToDoCheckmark = connect(null, {deleteToDo})(ToDoCheckmark);\n\nexport default reduxForm({\n    form: 'items', \n    enableReinitialize : true,\n})(ToDoCheckmark)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {deleteToDo, getToDo} from '../actions'\nimport ToDoCheckmark from './ToDoCheckmark'\n\nclass ToDoItem extends React.Component{\n    onEditClick = (formProps) => {\n        this.props.getToDo(formProps);      \n    }\n    render(){\n        const {id, input} = this.props.itemProps\n        return(\n            <form id = {id}>\n                <div className = \"item\" onClick={(e) => e.stopPropagation()} >\n                    \n                    <ToDoCheckmark name = {input}  item = {input} \n                    itemId = {id}/>\n\n                    <div className=\"item-name\" onClick = {() => this.onEditClick(this.props.itemProps)} >{input}</div> \n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        activeToDo : state.activeToDo\n    }\n}\n\nexport default connect(mapStateToProps, {deleteToDo, getToDo})(ToDoItem);\n\n\n\n// is it bad that there's state being saved here when we have redux already?\n// i think before, state was on the full form, not each of the items, so inputFieldShown was for all of the items, instead of having one per item\n// deleting numbers was a problem - prob bc they all shared the same form. now each checkmark is its own form\n// why does the click to show edit input work when console.logging doesn't log true/false like how it'd expect?\n// when state changes, not all of the related functions are rerendered\n// deleting >1 of the same thing will delete all of them, even though they have different ids","import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport {connect} from 'react-redux'\n\nimport {deselectActiveToDo, getToDo} from '../actions'\n\nclass ToDoForm extends React.Component{\n    componentDidMount(){\n        this.props.initialize(this.props.initialValues);\n    }\n    renderInput = (formProps) => {\n        console.log(formProps)\n        return( \n            <div style={{display: `block`, width: `100%`}}>\n                <input {...formProps.input} autoComplete=\"off\" autoFocus placeholder=\"+ Add\"></input>\n                {formProps.meta.error}\n            </div>\n        )\n    }\n    formOnChangeSubmit = (formValues) => {\n        this.props.formOnChangeSubmit(formValues)\n    }\n    formOnSubmit = (formValues, dispatch) => {\n        this.props.formOnSubmit(formValues, dispatch)\n    }\n    onKeyPress = (event) => {\n        this.props.arrowsKeyPress(event);\n    }\n    render(){\n        return(\n            <form style={{display: `block`, width: `84%`}}\n                onBlur = { () => setTimeout(this.props.handleSubmit(this.formOnSubmit))} \n                onSubmit={this.props.handleSubmit(this.formOnSubmit)} \n                onKeyDown = {this.onKeyPress}\n                onChange = { () => setTimeout(this.props.handleSubmit(this.formOnChangeSubmit))} \n                > \n                    <div onClick={(e) => e.stopPropagation()} style={{display: `block`, width: `100%`}}>\n                        <Field name=\"input\" component={this.renderInput} ></Field>\n                    </div>\n            </form>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const error = {};\n    if(!formValues.input){\n        error.input = ' '\n    }\n    return error;\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialValues :  {input: state.activeToDo.input}, \n        activeToDo : state.activeToDo,\n        todos: Object.values(state.todos)\n    }\n}\n\n\n\nToDoForm = reduxForm({\n    form: 'create-todo', \n    enableReinitialize : true,\n    validate: validate\n})(ToDoForm);\n\nexport default connect( mapStateToProps, {deselectActiveToDo, getToDo} )(ToDoForm)\n\n// export default ToDoForm;\n\n\n// form's getting cleared before post response has been resolved\n// dispatch(reset('to-dos')) \n// this.props.reset();\n\n// what does settimeout do? and why pass it as another function?\n\n// onClickOut = (meta) => {\n//     if(meta.active === false && meta.touched === true){\n//         // this.formSubmit();\n//         (this.props.handleSubmit(this.formSubmit))(); // Cannot update a component (`ConnectFunction`) while rendering a different component (`Unknown`).\n//     }\n// }","import React from 'react';\nimport {connect} from 'react-redux'\nimport {Field, reduxForm} from 'redux-form'\n\nimport ToDoForm from './ToDoForm'\nimport ToDoCheckmark from './ToDoCheckmark'\n\nimport {editToDo, deselectActiveToDo, getToDo} from '../actions'\n\nclass ToDoEdit extends React.Component{\n    constructor(props){\n        super(props)\n        this.handleKeyDown = this.arrowsKeyPress.bind(this)\n    }\n    formOnChangeSubmit = (formValues) => {\n        this.props.editToDo(this.props.activeToDo.id, formValues)\n    }\n    getNextItem = (event) => {\n        this.props.todos.forEach( el => {\n            if(el.id === this.props.activeToDo.id){\n                var nextItemIndex = -1;\n                if(event === 'enter' || event === 40 || event === 9){\n                    nextItemIndex = this.props.todos.indexOf(el) + 1;\n                } else if (event === 38){\n                    nextItemIndex = this.props.todos.indexOf(el) - 1;\n                }\n                if(nextItemIndex === this.props.todos.length){\n                    this.props.deselectActiveToDo();\n                }else if(nextItemIndex === -1){\n                    return null //is this allowed?\n                }else{\n                    this.props.getToDo(this.props.todos[nextItemIndex])\n                }\n            }\n        })\n    }\n    formOnSubmit = () => {\n       this.getNextItem('enter');\n       \n    }\n    arrowsKeyPress = (event) => {\n        if(event.keyCode === 38){\n            this.getNextItem(38);\n        }else if(event.keyCode === 40){\n            this.getNextItem(40);\n        }else if(event.keyCode === 9){\n            // this.getNextItem(9);\n        }\n    }\n    render(){\n        const {id, input} = this.props.itemProps\n        return (\n            <div className = \"item active\">\n                <ToDoCheckmark name = {input}  item = {input} \n                    itemId = {id}/>\n                <ToDoForm \n                    formOnChangeSubmit = {this.formOnChangeSubmit} \n                    formOnSubmit = {this.formOnSubmit} \n                    arrowsKeyPress = {this.arrowsKeyPress}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        activeToDo : state.activeToDo,\n        todos: Object.values(state.todos)\n    }\n}\n\nexport default connect(mapStateToProps, {editToDo, deselectActiveToDo, getToDo})(ToDoEdit);\n\n\n\n// onClick={(e) => e.stopPropagation()}\n\n// can set initial states on the form itself or where it's getting called. in this case, we have to set it on the form itself (i think) bc of this.props.initialize(this.props.initialValues) in componentDidMount\n// // <ToDoForm id={this.props.itemProps.id} formSubmit = {this.formSubmit} initialValues={this.props.initialValues}/>\n// const mapStateToProps = (state) => {\n//     return {\n//         initialValues : {input: state.activeToDo}\n//     }\n// }","import React from 'react';\nimport {connect} from 'react-redux'\n\n\nimport ToDoItem from './ToDoItem'\nimport {getToDos} from '../actions'\nimport ToDoEdit from './ToDoEdit'\n\nclass ToDoList extends React.Component{\n    componentDidMount(){\n        this.props.getToDos();\n    }\n    render(){\n        if(!this.props.todos){\n            return <div>loading...</div>\n        }\n        return this.props.todos.map( (el) => {\n            if(el.id === this.props.activeToDo.id){\n                return <ToDoEdit itemProps={el}  key = {el.id}/>\n            } else {\n                return <ToDoItem itemProps={el}  key = {el.id}/>\n            }\n        })\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todos : Object.values(state.todos), \n        activeToDo : state.activeToDo\n    }\n}\n\nexport default connect(mapStateToProps, {getToDos})(ToDoList);\n\n\n\n\n// TO DO\n// when checkboxing numbers at the beginning, will throw error\n// when 2 items have the same input, will delete both\n\n// need to spread the formProps.input onto input in order to get onChange, etc props \n\n\n// this.itemRef was only for the last item\n// componentDidMount(){\n//    this.itemRef = React.createRef(); \n// }\n{/* <div id = {formProps.itemId} ref={this.itemRef}> */}\n\n\n//forgot e.target\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {reset} from 'redux-form'\n\nimport ToDoForm from './ToDoForm'\nimport {createToDo, getToDo} from '../actions'\n\nclass ToDoCreate extends React.Component{\n    formOnChangeSubmit = () => {\n        return null\n        // is this the right way to do this?\n    }\n    onFormSubmit = (formValues, dispatch) => {\n        this.props.createToDo(formValues).then( () => dispatch(reset('create-todo')) )\n    }\n    arrowsKeyPress = (event) => {\n        // up arrow\n        if(event.keyCode === 38){\n            const nextItemIndex = this.props.todos.length - 1;\n            this.props.getToDo(this.props.todos[nextItemIndex])\n        }\n    }\n    render(){\n        if (this.props.activeToDo.id ){\n            return (\n                <div className=\"item\">\n                    <input placeholder=\"+ Add\"></input>\n                </div>\n            )\n            \n        } else {\n            return (\n                <div style={{display: `block`}} className=\"item active\">\n                    <ToDoForm \n                        formOnSubmit = {this.onFormSubmit} \n                        formOnChangeSubmit = {this.formOnChangeSubmit} \n                        arrowsKeyPress = {this.arrowsKeyPress}\n                        />\n                    </div>\n            )\n        }\n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeToDo : state.activeToDo, \n        todos: Object.values(state.todos)\n    }\n}\n\nexport default connect(mapStateToProps, {createToDo, getToDo})(ToDoCreate);\n\n////\n// i think dispatch is a redux thing\n// this.props.createToDo(formValues).then( () => dispatch(reset('create-todo')) ); ////!!!!!!!!!","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport ToDoList from './ToDoList'\nimport ToDoCreate from './ToDoCreate'\n\nimport {deselectActiveToDo} from '../actions'\n\nclass App extends React.Component{\n    render(){\n        return(\n            <div onClick ={() => this.props.deselectActiveToDo()} style={{minHeight: '100vh'}} className=\"wrapper\">\n                <h1>To Do</h1>\n                <div className =\"items-container\">\n                    <ToDoList />\n                    <ToDoCreate />\n                </div>\n                <div class=\"links\">\n                    <a class=\"github\" href=\"https://vivianzhang.com\" target=\"_blank\">Portfolio</a>\n                    <a class=\"github\" href=\"https://github.com/taiwei426/todo-app-client\" target=\"_blank\">GitHub</a>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect(null, {deselectActiveToDo})(App);","import _ from 'lodash'\n\nimport {combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form'\n\nconst todoReducer = (state={}, action) => {\n    switch(action.type){\n        case 'TODO_CREATE':\n            return {...state, [action.payload.id] : action.payload}\n        case 'TODOS_GET':\n            return {...state, ..._.mapKeys(action.payload, 'id')}\n        case 'TODO_DELETE':\n            return  _.omit(state, action.payload)\n        case 'TODOS_EDIT':\n            return {...state, [action.payload.id] : action.payload}\n        default:\n            return state\n    }\n}\n\nconst activeToDoReducer = (state = {}, action) => {\n    switch(action.type){\n        case 'TODO_GET':\n            return {id: action.payload.id, input : action.payload.input}\n        case 'DESELECT_ACTIVE_TODO':\n            return {}\n        default: \n            return state\n    }\n}\n\nexport default combineReducers({\n    todos: todoReducer, \n    activeToDo: activeToDoReducer,\n    form: formReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from'redux'\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App'\nimport reducer from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // dev tool to see the store\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/> \n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}